/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//Yolanda Jian
//ICS4U Airport Simulation
//Due: June 16, 2023
/*
A program that simulates the operation of an airport control tower with the arrivals
and departures of planes. Upon pressing the 'start' button, the simulation will land and takeoff 
planes in a 2:1 ratio. 
*/

/**
 *
 * @author yolandajian
 */
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileNotFoundException;
import java.util.LinkedList;
import java.util.Queue;
import javax.swing.Timer;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.NoSuchElementException;
import java.util.Scanner;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;

public class drawingArea extends javax.swing.JPanel {

    public static int planeX = 0;
    public static int planeY = 0;
    public static boolean newX = false;
    public static boolean newY = false;
    public static boolean landingQueue = false;
    public static boolean started = false;
    public static Timer t;
    BufferedImage planeImage;
    int tDuration = 600;

    /**
     * Creates new form drawingArea
     */
    public drawingArea() {
        initComponents();
        try {//loading the image
            planeImage = ImageIO.read(new File("plane.png"));
        } catch (IOException e) {
        }
        //making a timer with a duration of 600 milliseconds 
        t = new Timer(tDuration, new drawingArea.TimerListener());
    }

    public void startAnimation() {
        started = true;
        t.start();//start the timer 
    }

    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        if (started) {//only if start button is pressed 
            g.drawImage(planeImage, setPlaneX(), setPlaneY(), null);//drawing the image
        }

    }

    public boolean getQueue(boolean landing) {//checking if the animation is landing or taking off
        landingQueue = landing;
        return landingQueue;
    }

    public int resetXValue() {//if an new plane is taking off/arriving
        planeX = 0;
        return planeX;
    }

    public int resetYValue() {//if an new plane is taking off/arriving

        if (landingQueue) {
            planeY = 0;
        } else {
            planeY = 60;
        }
        return planeY;
    }

    public int setPlaneX() {//Draw screen size = (180,161)
        planeX = planeX + 10;
        return planeX;
    }

    public int setPlaneY() {
        if (landingQueue) {//if landing, move down the screen 
            planeY = planeY + 10;
        } else if (!landingQueue) {//if arriving, move up the screen
            planeY = planeY - 10;
        }
        return planeY;
    }

    private class TimerListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            t.setDelay(600);
            repaint();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
